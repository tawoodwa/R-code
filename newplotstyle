#library
library("tidyverse")
library("openxlsx")
library("RColorBrewer")
library("dplyr")
library("rpivotTable")
##imports dataset


datatobeimported <- "DMEPOS Complaint Analysis Q2Rfile.xlsx"
widedata <- read.xlsx(datatobeimported, sheet= 5, colNames = TRUE)



## gets rid of all rows that are blank/na

widedata <- widedata[!apply(is.na(widedata) | widedata == "", 1, all),]


##renames columns to be used with reshape function

Issue <- c("Issue.1","Issue.2","Issue.3","Issue.4")
Equipment <- c("Equipment.1","Equipment.2","Equipment.3","Equipment.4")
Resolution <- c("Resolution.1","Resolution.2","Resolution.3","Resolution.4")

names(widedata)[6:9]<- Issue
names(widedata)[11:14]<- Equipment
names(widedata)[16:19]<- Resolution

Columns <- c(Issue , Equipment , Resolution)

##turns table from wide to long 
longdata = reshape(widedata,direction="long",varying=Columns,idvar="Issue.ID")


##add quarter column to long data set

dl = nrow(longdata)
qcolname <- longdata[1,"Issue.ID"]
qcolname <- substring(qcolname,7,8)
dl = nrow(longdata)
longdata[ , "Quarter"] <- rep(qcolname,dl)
#---------------------------------------------------------------
##Create summissue column
longdata[,"summissue"] <- longdata[,'Issue']

#recode summissue column
longdata$'summissue'[which(longdata$'summissue' == "Difficulty receiving products in general"|longdata$'summissue' == "Difficulty receiving specific products")] = "Access"

longdata$'summissue'[which(longdata$'summissue' == "Medical necessity"|longdata$'summissue' == "Billing, coverage, coordination of benefits"|longdata$'summissue' == "ABN issues"|longdata$'summissue' == "ABN issues "|longdata$'summissue' == "LCD issues")] = "Claims/Payment"

longdata$'summissue'[which(longdata$'summissue' == "Supplier service issues"|longdata$'summissue' == "Delay due to lack of inventory ")] = "Customer Service"

longdata$'summissue'[which(longdata$'summissue' == "Problems repairing due to service issues "|longdata$'summissue' == "Problmes repairing due to lack of inventory "|longdata$'summissue' == "Problems repairing due to lack of inventory")] = "Repairs"

longdata$'summissue'[which(longdata$'summissue' == "Concern over standard receipt time"|longdata$'summissue' == "Difficulty finding new supplier"|longdata$'summissue' == "DMEPOS Information Issues"|longdata$'summissue' == "CBP information issues")] = "Competitive Bidding Program"

longdata$'summissue'[which(longdata$'summissue' == "Supplier compliance issues"|longdata$'summissue' == "Supplier fraud, waste, or abuse"|longdata$'summissue' == "Low quantity/quality")] = "Compliance with DMEPOS Supplier Standards"

longdata$'summissue'[which(longdata$'summissue' == "Other")] = "Other"

#-----------------------------------------------------------------------
#Create summresolution column
longdata$'Resolution'[which(longdata$'Resolution' == "Supplier educated about inquiry_x000D_\n"|longdata$'Resolution' == "Supplier educated about DMEPOS_x000D_\n"|longdata$'Resolution' == "Supplier educated about DMEPOS\n" )] = "Supplier educated about DMEPOS"
longdata[,"summresolution"] <- longdata[,'Resolution']

#recode summresolution column 
longdata$'summresolution'[which(longdata$'summresolution' == "New supplier found "|longdata$'summresolution' == "New supplier resolved the issue")] = "New supplier Found"

longdata$'summresolution'[which(longdata$'summresolution' == "Beneficiary educated about inquiry "|longdata$'summresolution' == "Beneficiary educated about suppliers"|longdata$'summresolution' == "Beneficiary educated about DMEPOS"|longdata$'summresolution' == "Beneficiary educated about DMEPOS\n")] = "Beneficiary Educated"

longdata$'summresolution'[which(longdata$'summresolution' == "Supplier educated about inquiry"|longdata$'summresolution' == "Supplier educated about DMEPOS"|longdata$'summresolution' == "Supplier educated about inquiry\n"|longdata$'summresolution' == "Supplier educated about inquiry\r\n"|longdata$'summresolution' == "Supplier educated about DMEPOS\n"|longdata$'summresolution' == "Supplier educated about DMEPOS\r\n")] = "Supplier educated"

longdata$'summresolution'[which(longdata$'summresolution' == "Doctor/RA educated about inquiry "|longdata$'summresolution' == "Doctor/RA educated about suppliers"|longdata$'summresolution' == "Doctor/RA educated about DMEPOS")] = "Doctor or Refferal Agent educated"

longdata$'summresolution'[which(longdata$'summresolution' == "Supplier re-evaluated the case"|longdata$'summresolution' == "Current supplier resolved the issue"|longdata$'summresolution' == "Reimbursement or refund "|longdata$'summresolution' == "Reimbursement or Refund")] = "Resolved by current supplier"

longdata$'summresolution'[which(longdata$'summresolution' == "Beneficiary paid OOP"|longdata$'summresolution' == "The case unresolved "|longdata$'summresolution' == "Referred to DMOA"|longdata$'summresolution' == "The case unresolved")] = "Unresolved"

longdata$'summresolution'[which(longdata$'summresolution' == "Other")] = "Other"

#---------------------------------------------------------------------
longdata[,"summequipment"] <- longdata[,'Equipment']

longdata$'summequipment'[which(longdata$'summequipment' == "Entreal Nutrients")] = "Entreal Nutrients, Equipment and Supplies"

longdata$'summequipment'[which(longdata$'summequipment' == "External Infusion Pumps")] = "External Infusion Pumps and Supplies"

longdata$'summequipment'[which(longdata$'summequipment' == "Hospital beds"|longdata$'summequipment' == "Support surfaces"|longdata$'summequipment' == "Lifts"|longdata$'summequipment' == "Commode chairs"|longdata$'summequipment' == "Commode chairs"|longdata$'summequipment' == "Other general home")] = "General Home Equipment and Related Supplies and Accessories"

longdata$'summequipment'[which(longdata$'summequipment' == "Entreal Nutrients")] = "Negative Pressure Wound Therapy Pumps and Releated Supplies and Accessories"

longdata$'summequipment'[which(longdata$'summequipment' == "Nebulizers"|longdata$'summequipment' == "Oxygen Supplies/Equipment"|longdata$'summequipment' == "Continuous Positive Airway Pressure (CPAP) / Respiratory Assist Device (RAD)")] = "Respiratory Equipment and Related Supplies and Accessories"

longdata$'summequipment'[which(longdata$'summequipment' == "Power Mobility Devices (PMDs)"|longdata$'summequipment' == "Walking Aids"|longdata$'summequipment' == "Manual wheelchairs")] = "Standard Mobility Equipment and Related Accessories"

longdata$'summequipment'[which(longdata$'summequipment' == "Other")] = "Other"

detach("package:openxlsx")
library("xlsx")
## create a new workbook for outputs
## possible values for type are : 'xls" and xlsx

wb<- createWorkbook(type = "xlsx")
sheet <- createSheet(wb, sheetName = "Complaint anlaysis data")
addDataFrame(longdata, sheet)
dtst <- Sys.Date()
dtst <- gsub("-","",dtst,)
qname <- longdata[1,"Issue.ID"]
qname <- substring(qname,5,8)

wbname <- paste(qname,dtst,".xlsx")

#-------------------------------------------------------------
##create custom color pallete
 values <- brewer.pal(12,name="Paired")
 values2 <-brewer.pal(12, name ="Dark2")
 caopallete<-c(values,values2)
#-------------------------------------------------------------
## plots a bar graph of detailed Issues by count
options(digits = 3)
dfTab <- as.data.frame(table(longdata$Issue))
colnames(dfTab)[1] <- "x"
dfTab$x <- factor(dfTab$x, levels=c("Difficulty receiving products in general" , "Difficulty receiving specific products", "Medical necessity","Billing, coverage, coordination of benefits","ABN issues ","Supplier service issues","Delay due to lack of inventory ","Problems repairing due to lack of inventory ","Problems repairing due to service issues ","Concern over standard receipt time","Difficulty finding new supplier","DMEPOS information issues","Supplier compliance issues","Supplier fraud, waste, or abuse","Low quantity/quality","Other"))
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ")

png("aissbycount.png",height=5, width=10,units = 'in', res=300)


aissbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 250)
print(aissbycount)
dev.off()

# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "all detailed issues by count")

# Add the plot created previously
addPicture("aissbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("aissbycount.png")

#-------------------------------------------------------------

##plots bar graph of detailed Resolutions by count
dfTab <- as.data.frame(table(longdata$Resolution))
colnames(dfTab)[1] <- "x"
dfTab$x <- factor(dfTab$x, levels=c("New supplier found " , "New supplier resolved the issue", "Beneficiary educated about inquiry ","Beneficiary educated about suppliers","Beneficiary educated about DMEPOS\n","Supplier educated about inquiry\n","Supplier educated about DMEPOS","Doctor/RA educated about DMEPOS","Doctor/RA educated about inquiry ","Doctor/RA educated about suppliers","Supplier re-evaluated the case","Current supplier resolved the issue","Reimbursement or refund ","Beneficiary paid OOP","The case unresolved ","Referred to DMOA"))
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("dresbycount.png",height=5, width=10,units = 'in', res=300)
dresbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 125)
print(dresbycount)
dev.off()
# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "all detailed resolutions by count")

# Add the plot created previously
addPicture("dresbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("dresbycount.png")

#---------------------------------------------------------------
##plots bar graph of summary equipment by count 
dfTab <- as.data.frame(table(longdata$summequipment))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("sumecbycount.png",height=5, width=10,units = 'in', res=300)
sumecbycount <-  ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 150)
print(sumecbycount)
dev.off()
# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "summary equipment by count")

# Add the plot created previously
addPicture("sumecbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("sumecbycount.png")



#---------------------------------------------------------------
##plots bar graph of summary issues by count 
dfTab <- as.data.frame(table(longdata$summissue))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("sumicbycount.png",,height=5, width=10,units = 'in', res=300)
sumicbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+ 
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 175)
print(sumicbycount)
dev.off()
# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "summary Issues by count")

# Add the plot created previously
addPicture("sumicbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("sumicbycount.png")

#---------------------------------------------------------------
##plots bar graph of summary resolution by count 
dfTab <- as.data.frame(table(longdata$summresolution))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("sumrcbycount.png",height=5, width=10,units = 'in', res=300)
sumrcbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 125)
print(sumrcbycount)
dev.off()
# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "summary Resolution by count")

# Add the plot created previously
addPicture("sumrcbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("sumrcbycount.png")

#---------------------------------------------------------------
##subset CAO 
 caodata <- longdata %>% filter(grepl("CAO", Issue.ID))
##cao bar graph detailed issues by count
dfTab <- as.data.frame(table(caodata$Issue))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("caoissbycount.png",height=5, width=10,units = 'in', res=300)
caoissbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+ 
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y=12)
	
print(caoissbycount)
dev.off()

# Create a new sheet to contain the plot
sheet <-createSheet(wb, sheetName = "Cao detailed issues by count")

# Add the plot created previously
addPicture("caoissbycount.png", sheet, scale = 1, startRow = 4,
          startColumn = 1)
# Remove the plot from the disk
res<-file.remove("caoissbycount.png")

#---------------------------------------------------------------


##cao bar graph detailed Resolutions by count   
dfTab <- as.data.frame(table(caodata$Resolution))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ") 
png("caoresbycount.png",height=5, width=10,units = 'in', res=300)
caoresbycount <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y=10)
print(caoresbycount)
dev.off()

#create a new sheet to contain the plot
sheet<-createSheet(wb,sheetName = "Cao detailed resolutions by count")

#Add the plot created previously
addPicture("caoresbycount.png",sheet, scale =1 , startRow = 4,startColumn=1)

#Remove the plot from the disk
res<-file.remove("caoresbycount.png")
#---------------------------------------------------------------
##creates a dataframe based on unique ID's
uniqueID<-longdata[!duplicated(longdata$Issue.ID),]
##total number of complaints by source
dfTab <- as.data.frame(table(uniqueID$Source.of.complaint))
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ")
png("complaintcountbysource.png",height=5, width=10,units = 'in', res=300)
complaintcountbysource <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 190)
print(complaintcountbysource)
dev.off()

#create a new sheet to contain the plot
sheet<-createSheet(wb,sheetName = "Total complaints by source")

#Add the plot created prviously
addPicture("complaintcountbysource.png",sheet, scale =1 , startRow = 4,startColumn=1)

#Remove the plot from the disk
res<-file.remove("complaintcountbysource.png")
#---------------------------------------------------------------

##total number of complaints by cba
cbapallete<-rainbow(100)
dfTab <- as.data.frame(table(uniqueID$CBA))
dfTab<-dfTab[dfTab[,'Freq']>4,]
colnames(dfTab)[1] <- "x"
dfTab$lab <- as.character.numeric_version(100 * dfTab$Freq / sum(dfTab$Freq))
dfTab$lab <- paste(dfTab$Freq,paste("(",dfTab$lab,"%)",sep=""),sep=" ")
png("complaintcountbycba.png",height=15, width=10,units = 'in', res=300)
complaintcountbycba <- ggplot(dfTab, aes(x=x,y=Freq,fill=x))+geom_bar(stat= "identity")+     coord_flip() +
        scale_fill_manual(values = caopallete)+
        theme(axis.title.x=element_blank(),axis.title.y=element_blank(),legend.title = element_blank(),legend.position = 'none')+ 
		geom_text(data=dfTab,aes(x=x,y=Freq,label=lab),vjust=.4,hjust=-.15,size=3)+
		expand_limits(y = 15)
print(complaintcountbycba)
dev.off()

#create a new sheet to contain the plot
sheet<-createSheet(wb,sheetName = "Total complaints by cba")

#Add the plot created prviously
addPicture("complaintcountbycba.png",sheet, scale =1 , startRow = 4,startColumn=1)

#Remove the plot from the disk
res<-file.remove("complaintcountbycba.png")


saveWorkbook(wb, wbname)